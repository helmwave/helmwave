name: Goreleaser

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  push:
    tags: ["v*"]

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  tagger:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Create tag
        id: tag
        uses: actions/github-script@v6
        if: github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release-')
        with:
          github-token: ${{ github.token }}
          script: |
            const tag = context.payload.pull_request.head.ref.replace("release-", "v")
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + tag,
              sha: context.payload.pull_request.merge_commit_sha,
            })
            return tag
          result-encoding: string
    outputs:
      tag: ${{ steps.tag.outputs.result }}

  get-tag:
    runs-on: ubuntu-latest
    if: success() || needs.tagger.result == 'skipped'
    needs:
      - tagger
    steps:
      - name: get pushed tag
        id: pushed
        if: needs.tagger.result != 'success'
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: get created tag
        id: created
        run: echo "::set-output name=tag::$TAG"
        if: needs.tagger.result == 'success'
        env:
          TAG: "${{ needs.tagger.outputs.tag }}"

      - name: combine tags
        id: combined
        run: echo "::set-output name=tag::$CREATED$PUSHED"
        env:
          CREATED: ${{ steps.created.outputs.tag }}
          PUSHED: ${{ steps.pushed.outputs.tag }}
    outputs:
      tag: ${{ steps.combined.outputs.tag }}

  goreleaser:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - get-tag
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.get-tag.outputs.tag }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.CR_PAT }}
          # IDK
          ASSUME_NO_MOVING_GC_UNSAFE_RISK_IT_WITH: go1.18
